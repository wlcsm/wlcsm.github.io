<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Will Vim Bog</title><link>https://wlcsm.github.io/posts/</link><description>All Posts | Will Vim Bog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 01 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wlcsm.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Theme Documentation - Basics</title><link>https://wlcsm.github.io/theme-documentation-basics/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/theme-documentation-basics/</guid><description>&lt;p>Discover what the Hugo - &lt;strong>LoveIt&lt;/strong> theme is all about and the core-concepts behind it.&lt;/p></description></item><item><title>Theme Documentation - Content</title><link>https://wlcsm.github.io/theme-documentation-content/</link><pubDate>Thu, 05 Mar 2020 15:58:26 +0800</pubDate><author>Author</author><guid>https://wlcsm.github.io/theme-documentation-content/</guid><description>&lt;p>Find out how to create and organize your content quickly and intuitively in &lt;strong>LoveIt&lt;/strong> theme.&lt;/p></description></item><item><title>Theme Documentation - Built-in Shortcodes</title><link>https://wlcsm.github.io/theme-documentation-built-in-shortcodes/</link><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/theme-documentation-built-in-shortcodes/</guid><description>&lt;p>&lt;strong>Hugo&lt;/strong> provides multiple built-in shortcodes for author convenience and to keep your markdown content clean.&lt;/p></description></item><item><title>Theme Documentation - Extended Shortcodes</title><link>https://wlcsm.github.io/theme-documentation-extended-shortcodes/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/theme-documentation-extended-shortcodes/</guid><description>&lt;p>&lt;strong>LoveIt&lt;/strong> theme provides multiple shortcodes on top of built-in ones in Hugo.&lt;/p></description></item><item><title>Basic Markdown Syntax</title><link>https://wlcsm.github.io/basic-markdown-syntax/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/basic-markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files.&lt;/p></description></item><item><title>Advent of Code 2020 Day 1-2 in Rust</title><link>https://wlcsm.github.io/rust-advent-of-code-1-2/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/rust-advent-of-code-1-2/</guid><description>Using Advent of Code to learn Rust Rust is a relatively new programming language that boast big benefits compared to its contemporaries. It combines the speed of C, expressiveness of Haskell, all while being memory and thread safe.
I have used Rust a lot this year to implement a polynomial library for my Honours year project, and so I have only really used it for scientific computing. I have barely touched string manipulation, parsing, and so I thought it was about time that I should branch out.</description></item><item><title>Markdown to HTML Using sed</title><link>https://wlcsm.github.io/sed-markdown-compiler/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/sed-markdown-compiler/</guid><description>I recently discovered the :TOhtml command in Vim. It converts the current view of the file you are editing in Vim to HTML that can be viewed in the browser. TODO I think it has some other use cases too
However, it would be nice if it could actually render the Markdown file I was editing too. I looked at the common solutions like pandoc but I found that they were incredibly huge programs.</description></item><item><title>Bulk Rename Script</title><link>https://wlcsm.github.io/interactive-bulk-rename-script/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/interactive-bulk-rename-script/</guid><description>I spend pretty much all my time in the terminal. After some time, I find I can navigate just as fast, if not faster there than in a GUI file browser.
I used to use the ultra-lightweight nnn terminal file browser, but even that I found unnecessary other than being very nice to look at.
The one feature that I missed however, was bulk renaming files in my editor. When you press r in nnn, it brings up the files in the directory in the program specified in your $EDITOR variable, with numbers next to them.</description></item><item><title>Mail Setup</title><link>https://wlcsm.github.io/mail-setup/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/mail-setup/</guid><description>Email My email setup is a little complicated because I maintain a local copy of my mail on my computer for backup reasons. It is also nice because it is faster. I use Neomutt which is a terminal based email client. This is because I like the minimalism and I just think that email is something that is so fundamental that it should be in a terminal. I have tried other lightweight clients like Sylpheed and I still prefer it.</description></item><item><title>Using nvim-lsp for Go</title><link>https://wlcsm.github.io/nvim-lsp_from_coc/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://wlcsm.github.io/nvim-lsp_from_coc/</guid><description>Now that nvim 0.5 is now stable I decided to finally try moving from CoC to the builtin LSP client nvim-lsp. This is mainly because its more minimalist and faster.
I previously trried the nvim-lsp back in unstable a year ago but I just couldn&amp;rsquo;t get things to work properly. There was a lot of configuration, and after a day or so I still couldn&amp;rsquo;t get it to reliably work. Now that 0.</description></item></channel></rss>