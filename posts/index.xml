<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts -</title><link>/posts/</link><description>All Posts |</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 06 Mar 2020 21:29:01 +0800</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml"/><item><title>Theme Documentation - Basics</title><link>/theme-documentation-basics/</link><pubDate>Fri, 06 Mar 2020 21:29:01 +0800</pubDate><author>Author</author><guid>/theme-documentation-basics/</guid><description>&lt;p>Discover what the Hugo - &lt;strong>LoveIt&lt;/strong> theme is all about and the core-concepts behind it.&lt;/p></description></item><item><title>Theme Documentation - Content</title><link>/theme-documentation-content/</link><pubDate>Thu, 05 Mar 2020 15:58:26 +0800</pubDate><author>Author</author><guid>/theme-documentation-content/</guid><description>&lt;p>Find out how to create and organize your content quickly and intuitively in &lt;strong>LoveIt&lt;/strong> theme.&lt;/p></description></item><item><title>Theme Documentation - Built-in Shortcodes</title><link>/theme-documentation-built-in-shortcodes/</link><pubDate>Wed, 04 Mar 2020 16:29:41 +0800</pubDate><author>Author</author><guid>/theme-documentation-built-in-shortcodes/</guid><description>&lt;p>&lt;strong>Hugo&lt;/strong> provides multiple built-in shortcodes for author convenience and to keep your markdown content clean.&lt;/p></description></item><item><title>Theme Documentation - Extended Shortcodes</title><link>/theme-documentation-extended-shortcodes/</link><pubDate>Tue, 03 Mar 2020 16:29:41 +0800</pubDate><author>Author</author><guid>/theme-documentation-extended-shortcodes/</guid><description>&lt;p>&lt;strong>LoveIt&lt;/strong> theme provides multiple shortcodes on top of built-in ones in Hugo.&lt;/p></description></item><item><title>Basic Markdown Syntax</title><link>/basic-markdown-syntax/</link><pubDate>Sun, 01 Dec 2019 21:57:40 +0800</pubDate><author>Author</author><guid>/basic-markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files.&lt;/p></description></item><item><title>Monitoring Cryptocurrencies with Bash</title><link>/crypto-bash-script/</link><pubDate>Sun, 01 Dec 2019 21:57:40 +0800</pubDate><author>Author</author><guid>/crypto-bash-script/</guid><description><![CDATA[I bought into the crypto scene but was concerned about the price of crypto dropping dramatically as it does, so I made an incredibly basic bash script to monitor the prices of crypto using the CoinGecko API. This could be used for instance to show the current price on Bitcoin in PolyBar or DWM
1 2 3 4 5 6 7  #!/bin/sh  COINS=$1 CURRENCIES=$2 curl -X GET &#34;https://api.coingecko.com/api/v3/simple/price?ids=${COINS}&amp;vs_currencies=${CURRENCIES}&#34; -H &#34;accept: application/json&#34; echo &#34;&#34;   Save this to a file fetch-crypto.]]></description></item><item><title>A Vim Purist's Workflow</title><link>/vim-workflow/</link><pubDate>Tue, 01 Oct 2019 17:55:28 +0800</pubDate><author>Author</author><guid>/vim-workflow/</guid><description>I have been using Vim for about 1.5 years now and I am constantly surprised about how many features it has.
Despite using it for many smaller projected, I wasn&amp;rsquo;t sold on using Vim as my main programming environment, and even then, it was only with CoC installed to essentially replicate VS Code in Vim. Until I stumbled across this video by Leeren at VimConf . This completely blew my mind (as did his other videos on Vim).</description></item><item><title>Advent of Code 2020 Day 1-2 in Rust</title><link>/rust-advent-of-code-1-2/</link><pubDate>Tue, 01 Oct 2019 17:55:28 +0800</pubDate><author>Author</author><guid>/rust-advent-of-code-1-2/</guid><description>Using Advent of Code to learn Rust Rust is a relatively new programming language that boast big benefits compared to its contemporaries. It combines the speed of C, expressiveness of Haskell, all while being memory and thread safe.
I have used Rust a lot this year to implement a polynomial library for my Honours year project, and so I have only really used it for scientific computing. I have barely touched string manipulation, parsing, and so I thought it was about time that I should branch out.</description></item><item><title>Bulk Rename Script</title><link>/interactive-bulk-rename-script/</link><pubDate>Tue, 01 Oct 2019 17:55:28 +0800</pubDate><author>Author</author><guid>/interactive-bulk-rename-script/</guid><description>I spend pretty much all my time in the terminal. After some time, I find I can navigate just as fast, if not faster there than in a GUI file browser.
I used to use the ultra-lightweight nnn terminal file browser, but even that I found unnecessary other than being very nice to look at.
The one feature that I missed however, was bulk renaming files in my editor. When you press r in nnn, it brings up the files in the directory in the program specified in your $EDITOR variable, with numbers next to them.</description></item><item><title>Emoji Support</title><link>/emoji-support/</link><pubDate>Tue, 01 Oct 2019 17:55:28 +0800</pubDate><author>Author</author><guid>/emoji-support/</guid><description>&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description></item></channel></rss>